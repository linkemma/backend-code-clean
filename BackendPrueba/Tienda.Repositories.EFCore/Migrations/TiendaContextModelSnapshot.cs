// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tienda.Repositories.EFCore.DataContext;

#nullable disable

namespace Tienda.Repositories.EFCore.Migrations
{
    [DbContext(typeof(TiendaContext))]
    partial class TiendaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Tienda.Entities.POCOEntities.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(5)
                        .HasColumnType("int")
                        .IsFixedLength();

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Manuel"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Belkis"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Raquel"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Angelica"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Sofia"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Alejandro"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Fanorth"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Diego"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Carlos"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Cesar"
                        });
                });

            modelBuilder.Entity("Tienda.Entities.POCOEntities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CustomerId")
                        .HasMaxLength(5)
                        .HasColumnType("int")
                        .IsFixedLength();

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderStatus")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Tienda.Entities.POCOEntities.OrderDetail", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<short>("Quantity")
                        .HasColumnType("smallint");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(15,2)");

                    b.HasKey("OrderId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("Tienda.Entities.POCOEntities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(15,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Arroz",
                            Price = 3800m,
                            Quantity = 40,
                            Stock = 5
                        },
                        new
                        {
                            Id = 2,
                            Name = "Sunte",
                            Price = 1000m,
                            Quantity = 40,
                            Stock = 5
                        },
                        new
                        {
                            Id = 3,
                            Name = "Pastas La Muñeca",
                            Price = 2800m,
                            Quantity = 40,
                            Stock = 5
                        },
                        new
                        {
                            Id = 4,
                            Name = "Macarrones",
                            Price = 1400m,
                            Quantity = 40,
                            Stock = 5
                        },
                        new
                        {
                            Id = 5,
                            Name = "Arina Pan",
                            Price = 5600m,
                            Quantity = 40,
                            Stock = 5
                        },
                        new
                        {
                            Id = 6,
                            Name = "Crema De Dientes",
                            Price = 4800m,
                            Quantity = 40,
                            Stock = 5
                        },
                        new
                        {
                            Id = 7,
                            Name = "Jabon En Polvo",
                            Price = 4300m,
                            Quantity = 40,
                            Stock = 5
                        },
                        new
                        {
                            Id = 8,
                            Name = "Jabon En Barra",
                            Price = 2300m,
                            Quantity = 40,
                            Stock = 5
                        },
                        new
                        {
                            Id = 9,
                            Name = "Condimento",
                            Price = 1200m,
                            Quantity = 40,
                            Stock = 5
                        },
                        new
                        {
                            Id = 10,
                            Name = "Frutiño",
                            Price = 1000m,
                            Quantity = 40,
                            Stock = 5
                        },
                        new
                        {
                            Id = 11,
                            Name = "Chocorramo",
                            Price = 2200m,
                            Quantity = 40,
                            Stock = 5
                        },
                        new
                        {
                            Id = 12,
                            Name = "BomBom Bum",
                            Price = 400m,
                            Quantity = 40,
                            Stock = 5
                        },
                        new
                        {
                            Id = 13,
                            Name = "Bocadollo De Guayaba",
                            Price = 800m,
                            Quantity = 40,
                            Stock = 5
                        },
                        new
                        {
                            Id = 14,
                            Name = "Leche",
                            Price = 3800m,
                            Quantity = 40,
                            Stock = 5
                        },
                        new
                        {
                            Id = 15,
                            Name = "Zucaritas",
                            Price = 7800m,
                            Quantity = 40,
                            Stock = 5
                        },
                        new
                        {
                            Id = 16,
                            Name = "Cafe",
                            Price = 3800m,
                            Quantity = 40,
                            Stock = 5
                        },
                        new
                        {
                            Id = 17,
                            Name = "Leche En Polvo",
                            Price = 10800m,
                            Quantity = 40,
                            Stock = 5
                        },
                        new
                        {
                            Id = 18,
                            Name = "Aceite",
                            Price = 4000m,
                            Quantity = 40,
                            Stock = 5
                        },
                        new
                        {
                            Id = 19,
                            Name = "Coca cola",
                            Price = 5400m,
                            Quantity = 40,
                            Stock = 5
                        });
                });

            modelBuilder.Entity("Tienda.Entities.POCOEntities.Order", b =>
                {
                    b.HasOne("Tienda.Entities.POCOEntities.Customer", null)
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Tienda.Entities.POCOEntities.OrderDetail", b =>
                {
                    b.HasOne("Tienda.Entities.POCOEntities.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tienda.Entities.POCOEntities.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });
#pragma warning restore 612, 618
        }
    }
}
